{"ast":null,"code":"import _slicedToArray from\"D:/Front-End Web Development/Exercises/All/REACT/React-App-Food-Delivery/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"D:/Front-End Web Development/Exercises/All/REACT/React-App-Food-Delivery/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useReducer,useState}from\"react\";import classes from\"./Checkout.module.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var initialInputStates={name:\"\",address:\"\",number:\"\",isNameValid:false,isAddressValid:false,isNumberValid:false,isNameTouched:false,isAddressTouched:false,isNumberTouched:false};var inputReducersFn=function inputReducersFn(state,action){switch(action.type){case\"NAME\":return _objectSpread(_objectSpread({},state),{},{name:action.value,isNameValid:action.isValueValid,isNameTouched:action.isValueTouched});case\"ADDRESS\":return _objectSpread(_objectSpread({},state),{},{address:action.value,isAddressValid:action.isValueValid,isAddressTouched:action.isValueTouched});case\"NUMBER\":return _objectSpread(_objectSpread({},state),{},{number:action.value,isNumberValid:action.isValueValid,isNumberTouched:action.isValueTouched});case\"RESET\":return initialInputStates;default:return _objectSpread({},state);}};var Checkout=function Checkout(props){var _useReducer=useReducer(inputReducersFn,initialInputStates),_useReducer2=_slicedToArray(_useReducer,2),inputs=_useReducer2[0],dispatch=_useReducer2[1];// This state for display order food successfully\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOrderSuccess=_useState2[0],setIsOrderSuccess=_useState2[1];// Disable copy & cut & paste in input fields.\nvar onCopyAndPasteDisableHandler=function onCopyAndPasteDisableHandler(event){event.preventDefault();};// Validation & Store input values in our useReducer.\nvar onChangeNameHandler=function onChangeNameHandler(event){// Check Validation: name is not empty\nvar isValueTouched=true;var value=event.target.value.trim();var isValueValid=value.trim()!==\"\";// Dispatch the action\ndispatch({type:\"NAME\",value:value,isValueValid:isValueValid,isValueTouched:isValueTouched});setIsOrderSuccess(false);};var onChangeAddressHandler=function onChangeAddressHandler(event){// Check Validation: Detailed address\nvar isValueTouched=true;var value=event.target.value.trim();var isValueValid=value.length>=5;// Dispatch the action\ndispatch({type:\"ADDRESS\",value:value,isValueValid:isValueValid,isValueTouched:isValueTouched});setIsOrderSuccess(false);};var onChangeNumberHandler=function onChangeNumberHandler(event){// Check Validation: value is a number & not empty\nvar isValueTouched=true;var value=event.target.value.trim();var isValueValid=!isNaN(value)&&value.length!==0;// Dispatch the action\ndispatch({type:\"NUMBER\",value:value,isValueValid:isValueValid,isValueTouched:isValueTouched});setIsOrderSuccess(false);};// FORM SUBMMITION\nvar submitOrderHandler=function submitOrderHandler(event){event.preventDefault();// Check everything, then we could send data to server/database\nif(inputs.isNameValid&&inputs.isAddressValid&&inputs.isNumberValid){setIsOrderSuccess(true);dispatch({type:\"RESET\"});// Here we can send user data to backend, there is no problem.\nconsole.log(inputs);}};// Valid value messages:\nvar nameValidation=inputs.isNameTouched&&!inputs.isNameValid&&/*#__PURE__*/_jsx(\"p\",{className:classes.isValid,children:\"Please enter a valid full name!\"});var addressValidation=inputs.isAddressTouched&&!inputs.isAddressValid&&/*#__PURE__*/_jsx(\"p\",{className:classes.isValid,children:\"Please enter your address in detail!\"});var numberValidation=inputs.isNumberTouched&&!inputs.isNumberValid&&/*#__PURE__*/_jsx(\"p\",{className:classes.isValid,children:\"Please enter a valid phone nubmer!\"});// Check if the order was success\nvar successfulOrder=isOrderSuccess&&/*#__PURE__*/_jsx(\"p\",{className:classes.successfully,children:\"The order was successfully completed.\"});return/*#__PURE__*/_jsxs(\"form\",{className:classes[\"form-checkout\"],onSubmit:submitOrderHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes[\"input-boxes\"],children:[/*#__PURE__*/_jsxs(\"div\",{className:classes[\"input-box\"],children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Full Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"username\",id:\"name\",value:inputs.name,onChange:onChangeNameHandler,onPaste:onCopyAndPasteDisableHandler,onCopy:onCopyAndPasteDisableHandler,onCut:onCopyAndPasteDisableHandler,autoComplete:\"off\"}),nameValidation]}),/*#__PURE__*/_jsxs(\"div\",{className:classes[\"input-box\"],children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"address\",children:\"Address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"useraddress\",id:\"address\",value:inputs.address,onChange:onChangeAddressHandler,onPaste:onCopyAndPasteDisableHandler,onCopy:onCopyAndPasteDisableHandler,onCut:onCopyAndPasteDisableHandler,autoComplete:\"off\"}),addressValidation]}),/*#__PURE__*/_jsxs(\"div\",{className:classes[\"input-box\"],children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"phone\",children:\"Phone Number\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"usernumber\",id:\"phone\",value:inputs.number,onChange:onChangeNumberHandler,onPaste:onCopyAndPasteDisableHandler,onCopy:onCopyAndPasteDisableHandler,onCut:onCopyAndPasteDisableHandler,autoComplete:\"off\"}),numberValidation]})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsx(\"button\",{className:classes.cancel,onClick:props.onCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:classes.confirm,children:\"Confirm\"})]}),successfulOrder]});};export default Checkout;","map":{"version":3,"names":["useReducer","useState","classes","initialInputStates","name","address","number","isNameValid","isAddressValid","isNumberValid","isNameTouched","isAddressTouched","isNumberTouched","inputReducersFn","state","action","type","value","isValueValid","isValueTouched","Checkout","props","inputs","dispatch","isOrderSuccess","setIsOrderSuccess","onCopyAndPasteDisableHandler","event","preventDefault","onChangeNameHandler","target","trim","onChangeAddressHandler","length","onChangeNumberHandler","isNaN","submitOrderHandler","console","log","nameValidation","isValid","addressValidation","numberValidation","successfulOrder","successfully","actions","cancel","onCancel","confirm"],"sources":["D:/Front-End Web Development/Exercises/All/REACT/React-App-Food-Delivery/src/components/Checkout/Checkout.jsx"],"sourcesContent":["import { useReducer, useState } from \"react\";\r\nimport classes from \"./Checkout.module.scss\";\r\n\r\nconst initialInputStates = {\r\n  name: \"\",\r\n  address: \"\",\r\n  number: \"\",\r\n  isNameValid: false,\r\n  isAddressValid: false,\r\n  isNumberValid: false,\r\n  isNameTouched: false,\r\n  isAddressTouched: false,\r\n  isNumberTouched: false,\r\n};\r\n\r\nconst inputReducersFn = (state, action) => {\r\n  switch (action.type) {\r\n    case \"NAME\":\r\n      return {\r\n        ...state,\r\n        name: action.value,\r\n        isNameValid: action.isValueValid,\r\n        isNameTouched: action.isValueTouched,\r\n      };\r\n\r\n    case \"ADDRESS\":\r\n      return {\r\n        ...state,\r\n        address: action.value,\r\n        isAddressValid: action.isValueValid,\r\n        isAddressTouched: action.isValueTouched,\r\n      };\r\n\r\n    case \"NUMBER\":\r\n      return {\r\n        ...state,\r\n        number: action.value,\r\n        isNumberValid: action.isValueValid,\r\n        isNumberTouched: action.isValueTouched,\r\n      };\r\n\r\n    case \"RESET\":\r\n      return initialInputStates;\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nconst Checkout = (props) => {\r\n  const [inputs, dispatch] = useReducer(inputReducersFn, initialInputStates);\r\n\r\n  // This state for display order food successfully\r\n  const [isOrderSuccess, setIsOrderSuccess] = useState(false);\r\n\r\n  // Disable copy & cut & paste in input fields.\r\n  const onCopyAndPasteDisableHandler = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  // Validation & Store input values in our useReducer.\r\n  const onChangeNameHandler = (event) => {\r\n    // Check Validation: name is not empty\r\n    const isValueTouched = true;\r\n    const value = event.target.value.trim();\r\n    const isValueValid = value.trim() !== \"\";\r\n    // Dispatch the action\r\n    dispatch({ type: \"NAME\", value, isValueValid, isValueTouched });\r\n    setIsOrderSuccess(false);\r\n  };\r\n\r\n  const onChangeAddressHandler = (event) => {\r\n    // Check Validation: Detailed address\r\n    const isValueTouched = true;\r\n    const value = event.target.value.trim();\r\n    const isValueValid = value.length >= 5;\r\n    // Dispatch the action\r\n    dispatch({ type: \"ADDRESS\", value, isValueValid, isValueTouched });\r\n    setIsOrderSuccess(false);\r\n  };\r\n\r\n  const onChangeNumberHandler = (event) => {\r\n    // Check Validation: value is a number & not empty\r\n    const isValueTouched = true;\r\n    const value = event.target.value.trim();\r\n    const isValueValid = !isNaN(value) && value.length !== 0;\r\n    // Dispatch the action\r\n    dispatch({ type: \"NUMBER\", value, isValueValid, isValueTouched });\r\n    setIsOrderSuccess(false);\r\n  };\r\n\r\n  // FORM SUBMMITION\r\n  const submitOrderHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Check everything, then we could send data to server/database\r\n    if (inputs.isNameValid && inputs.isAddressValid && inputs.isNumberValid) {\r\n      setIsOrderSuccess(true);\r\n      dispatch({ type: \"RESET\" });\r\n\r\n      // Here we can send user data to backend, there is no problem.\r\n      console.log(inputs);\r\n    }\r\n  };\r\n\r\n  // Valid value messages:\r\n  const nameValidation = inputs.isNameTouched && !inputs.isNameValid && (\r\n    <p className={classes.isValid}>Please enter a valid full name!</p>\r\n  );\r\n  const addressValidation = inputs.isAddressTouched &&\r\n    !inputs.isAddressValid && (\r\n      <p className={classes.isValid}>Please enter your address in detail!</p>\r\n    );\r\n  const numberValidation = inputs.isNumberTouched && !inputs.isNumberValid && (\r\n    <p className={classes.isValid}>Please enter a valid phone nubmer!</p>\r\n  );\r\n\r\n  // Check if the order was success\r\n  const successfulOrder = isOrderSuccess && (\r\n    <p className={classes.successfully}>\r\n      The order was successfully completed.\r\n    </p>\r\n  );\r\n\r\n  return (\r\n    <form className={classes[\"form-checkout\"]} onSubmit={submitOrderHandler}>\r\n      <div className={classes[\"input-boxes\"]}>\r\n        <div className={classes[\"input-box\"]}>\r\n          <label htmlFor=\"name\">Full Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            id=\"name\"\r\n            value={inputs.name}\r\n            onChange={onChangeNameHandler}\r\n            onPaste={onCopyAndPasteDisableHandler}\r\n            onCopy={onCopyAndPasteDisableHandler}\r\n            onCut={onCopyAndPasteDisableHandler}\r\n            autoComplete=\"off\"\r\n          />\r\n          {nameValidation}\r\n        </div>\r\n\r\n        <div className={classes[\"input-box\"]}>\r\n          <label htmlFor=\"address\">Address</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"useraddress\"\r\n            id=\"address\"\r\n            value={inputs.address}\r\n            onChange={onChangeAddressHandler}\r\n            onPaste={onCopyAndPasteDisableHandler}\r\n            onCopy={onCopyAndPasteDisableHandler}\r\n            onCut={onCopyAndPasteDisableHandler}\r\n            autoComplete=\"off\"\r\n          />\r\n          {addressValidation}\r\n        </div>\r\n\r\n        <div className={classes[\"input-box\"]}>\r\n          <label htmlFor=\"phone\">Phone Number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"usernumber\"\r\n            id=\"phone\"\r\n            value={inputs.number}\r\n            onChange={onChangeNumberHandler}\r\n            onPaste={onCopyAndPasteDisableHandler}\r\n            onCopy={onCopyAndPasteDisableHandler}\r\n            onCut={onCopyAndPasteDisableHandler}\r\n            autoComplete=\"off\"\r\n          />\r\n          {numberValidation}\r\n        </div>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button className={classes.cancel} onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.confirm}>Confirm</button>\r\n      </div>\r\n      {successfulOrder}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"mappings":"2TAAA,OAASA,UAAT,CAAqBC,QAArB,KAAqC,OAArC,CACA,MAAOC,QAAP,KAAoB,wBAApB,C,wFAEA,GAAMC,mBAAkB,CAAG,CACzBC,IAAI,CAAE,EADmB,CAEzBC,OAAO,CAAE,EAFgB,CAGzBC,MAAM,CAAE,EAHiB,CAIzBC,WAAW,CAAE,KAJY,CAKzBC,cAAc,CAAE,KALS,CAMzBC,aAAa,CAAE,KANU,CAOzBC,aAAa,CAAE,KAPU,CAQzBC,gBAAgB,CAAE,KARO,CASzBC,eAAe,CAAE,KATQ,CAA3B,CAYA,GAAMC,gBAAe,CAAG,QAAlBA,gBAAkB,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACzC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,MAAL,CACE,sCACKF,KADL,MAEEV,IAAI,CAAEW,MAAM,CAACE,KAFf,CAGEV,WAAW,CAAEQ,MAAM,CAACG,YAHtB,CAIER,aAAa,CAAEK,MAAM,CAACI,cAJxB,GAOF,IAAK,SAAL,CACE,sCACKL,KADL,MAEET,OAAO,CAAEU,MAAM,CAACE,KAFlB,CAGET,cAAc,CAAEO,MAAM,CAACG,YAHzB,CAIEP,gBAAgB,CAAEI,MAAM,CAACI,cAJ3B,GAOF,IAAK,QAAL,CACE,sCACKL,KADL,MAEER,MAAM,CAAES,MAAM,CAACE,KAFjB,CAGER,aAAa,CAAEM,MAAM,CAACG,YAHxB,CAIEN,eAAe,CAAEG,MAAM,CAACI,cAJ1B,GAOF,IAAK,OAAL,CACE,MAAOhB,mBAAP,CAEF,QACE,wBAAYW,KAAZ,EA7BJ,CA+BD,CAhCD,CAkCA,GAAMM,SAAQ,CAAG,QAAXA,SAAW,CAACC,KAAD,CAAW,CAC1B,gBAA2BrB,UAAU,CAACa,eAAD,CAAkBV,kBAAlB,CAArC,4CAAOmB,MAAP,iBAAeC,QAAf,iBAEA;AACA,cAA4CtB,QAAQ,CAAC,KAAD,CAApD,wCAAOuB,cAAP,eAAuBC,iBAAvB,eAEA;AACA,GAAMC,6BAA4B,CAAG,QAA/BA,6BAA+B,CAACC,KAAD,CAAW,CAC9CA,KAAK,CAACC,cAAN,GACD,CAFD,CAIA;AACA,GAAMC,oBAAmB,CAAG,QAAtBA,oBAAsB,CAACF,KAAD,CAAW,CACrC;AACA,GAAMR,eAAc,CAAG,IAAvB,CACA,GAAMF,MAAK,CAAGU,KAAK,CAACG,MAAN,CAAab,KAAb,CAAmBc,IAAnB,EAAd,CACA,GAAMb,aAAY,CAAGD,KAAK,CAACc,IAAN,KAAiB,EAAtC,CACA;AACAR,QAAQ,CAAC,CAAEP,IAAI,CAAE,MAAR,CAAgBC,KAAK,CAALA,KAAhB,CAAuBC,YAAY,CAAZA,YAAvB,CAAqCC,cAAc,CAAdA,cAArC,CAAD,CAAR,CACAM,iBAAiB,CAAC,KAAD,CAAjB,CACD,CARD,CAUA,GAAMO,uBAAsB,CAAG,QAAzBA,uBAAyB,CAACL,KAAD,CAAW,CACxC;AACA,GAAMR,eAAc,CAAG,IAAvB,CACA,GAAMF,MAAK,CAAGU,KAAK,CAACG,MAAN,CAAab,KAAb,CAAmBc,IAAnB,EAAd,CACA,GAAMb,aAAY,CAAGD,KAAK,CAACgB,MAAN,EAAgB,CAArC,CACA;AACAV,QAAQ,CAAC,CAAEP,IAAI,CAAE,SAAR,CAAmBC,KAAK,CAALA,KAAnB,CAA0BC,YAAY,CAAZA,YAA1B,CAAwCC,cAAc,CAAdA,cAAxC,CAAD,CAAR,CACAM,iBAAiB,CAAC,KAAD,CAAjB,CACD,CARD,CAUA,GAAMS,sBAAqB,CAAG,QAAxBA,sBAAwB,CAACP,KAAD,CAAW,CACvC;AACA,GAAMR,eAAc,CAAG,IAAvB,CACA,GAAMF,MAAK,CAAGU,KAAK,CAACG,MAAN,CAAab,KAAb,CAAmBc,IAAnB,EAAd,CACA,GAAMb,aAAY,CAAG,CAACiB,KAAK,CAAClB,KAAD,CAAN,EAAiBA,KAAK,CAACgB,MAAN,GAAiB,CAAvD,CACA;AACAV,QAAQ,CAAC,CAAEP,IAAI,CAAE,QAAR,CAAkBC,KAAK,CAALA,KAAlB,CAAyBC,YAAY,CAAZA,YAAzB,CAAuCC,cAAc,CAAdA,cAAvC,CAAD,CAAR,CACAM,iBAAiB,CAAC,KAAD,CAAjB,CACD,CARD,CAUA;AACA,GAAMW,mBAAkB,CAAG,QAArBA,mBAAqB,CAACT,KAAD,CAAW,CACpCA,KAAK,CAACC,cAAN,GAEA;AACA,GAAIN,MAAM,CAACf,WAAP,EAAsBe,MAAM,CAACd,cAA7B,EAA+Cc,MAAM,CAACb,aAA1D,CAAyE,CACvEgB,iBAAiB,CAAC,IAAD,CAAjB,CACAF,QAAQ,CAAC,CAAEP,IAAI,CAAE,OAAR,CAAD,CAAR,CAEA;AACAqB,OAAO,CAACC,GAAR,CAAYhB,MAAZ,EACD,CACF,CAXD,CAaA;AACA,GAAMiB,eAAc,CAAGjB,MAAM,CAACZ,aAAP,EAAwB,CAACY,MAAM,CAACf,WAAhC,eACrB,UAAG,SAAS,CAAEL,OAAO,CAACsC,OAAtB,6CADF,CAGA,GAAMC,kBAAiB,CAAGnB,MAAM,CAACX,gBAAP,EACxB,CAACW,MAAM,CAACd,cADgB,eAEtB,UAAG,SAAS,CAAEN,OAAO,CAACsC,OAAtB,kDAFJ,CAIA,GAAME,iBAAgB,CAAGpB,MAAM,CAACV,eAAP,EAA0B,CAACU,MAAM,CAACb,aAAlC,eACvB,UAAG,SAAS,CAAEP,OAAO,CAACsC,OAAtB,gDADF,CAIA;AACA,GAAMG,gBAAe,CAAGnB,cAAc,eACpC,UAAG,SAAS,CAAEtB,OAAO,CAAC0C,YAAtB,mDADF,CAMA,mBACE,cAAM,SAAS,CAAE1C,OAAO,CAAC,eAAD,CAAxB,CAA2C,QAAQ,CAAEkC,kBAArD,wBACE,aAAK,SAAS,CAAElC,OAAO,CAAC,aAAD,CAAvB,wBACE,aAAK,SAAS,CAAEA,OAAO,CAAC,WAAD,CAAvB,wBACE,cAAO,OAAO,CAAC,MAAf,uBADF,cAEE,cACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,UAFP,CAGE,EAAE,CAAC,MAHL,CAIE,KAAK,CAAEoB,MAAM,CAAClB,IAJhB,CAKE,QAAQ,CAAEyB,mBALZ,CAME,OAAO,CAAEH,4BANX,CAOE,MAAM,CAAEA,4BAPV,CAQE,KAAK,CAAEA,4BART,CASE,YAAY,CAAC,KATf,EAFF,CAaGa,cAbH,GADF,cAiBE,aAAK,SAAS,CAAErC,OAAO,CAAC,WAAD,CAAvB,wBACE,cAAO,OAAO,CAAC,SAAf,qBADF,cAEE,cACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,aAFP,CAGE,EAAE,CAAC,SAHL,CAIE,KAAK,CAAEoB,MAAM,CAACjB,OAJhB,CAKE,QAAQ,CAAE2B,sBALZ,CAME,OAAO,CAAEN,4BANX,CAOE,MAAM,CAAEA,4BAPV,CAQE,KAAK,CAAEA,4BART,CASE,YAAY,CAAC,KATf,EAFF,CAaGe,iBAbH,GAjBF,cAiCE,aAAK,SAAS,CAAEvC,OAAO,CAAC,WAAD,CAAvB,wBACE,cAAO,OAAO,CAAC,OAAf,0BADF,cAEE,cACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,YAFP,CAGE,EAAE,CAAC,OAHL,CAIE,KAAK,CAAEoB,MAAM,CAAChB,MAJhB,CAKE,QAAQ,CAAE4B,qBALZ,CAME,OAAO,CAAER,4BANX,CAOE,MAAM,CAAEA,4BAPV,CAQE,KAAK,CAAEA,4BART,CASE,YAAY,CAAC,KATf,EAFF,CAaGgB,gBAbH,GAjCF,GADF,cAkDE,aAAK,SAAS,CAAExC,OAAO,CAAC2C,OAAxB,wBACE,eAAQ,SAAS,CAAE3C,OAAO,CAAC4C,MAA3B,CAAmC,OAAO,CAAEzB,KAAK,CAAC0B,QAAlD,oBADF,cAIE,eAAQ,SAAS,CAAE7C,OAAO,CAAC8C,OAA3B,qBAJF,GAlDF,CAwDGL,eAxDH,GADF,CA4DD,CAvID,CAyIA,cAAevB,SAAf"},"metadata":{},"sourceType":"module"}