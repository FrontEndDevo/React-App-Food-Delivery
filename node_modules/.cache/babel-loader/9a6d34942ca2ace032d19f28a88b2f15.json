{"ast":null,"code":"var _jsxFileName = \"D:\\\\Front-End Web Development\\\\Exercises\\\\All\\\\REACT\\\\React-App-Food-Delivery\\\\src\\\\components\\\\Products\\\\ProductFood\\\\ProductFood.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport classes from \"./ProductFood.module.scss\";\nimport FoodContext from \"../../../store/food-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductFood = props => {\n  _s();\n\n  const [inputValue, setInputValue] = useState({}); //  using Context to store our food-data,\n  //  so that we don't have to fetch it every re-rendered\n\n  const foodCtx = useContext(FoodContext); // Here I used useEffect, because I will store the fetched data in Context,\n  // So I don't have to fetch the same data every re-evaluated.\n\n  useEffect(() => {\n    // Fetch food data from (Firebase)\n    const fetchData = async () => {\n      const response = await fetch(`https://food-delivery-b0655-default-rtdb.firebaseio.com/food.json`);\n      if (!response.ok) throw new Error(\"Fetch food failed!\");\n      const data = await response.json(); // Assign data to our context.\n\n      foodCtx.countries = data;\n    };\n\n    try {\n      fetchData();\n    } catch (error) {\n      console.log(error || \"Something went wrong!\");\n    }\n  }, [foodCtx]); // Determine which country has been choosen.\n\n  const countryFood = foodCtx.countries[props.country]; // Convert the choosen country object to an array to map.\n\n  const countriesArray = [];\n\n  for (const key in countryFood) {\n    countriesArray.push(countryFood[key]);\n  }\n\n  const changeInputHandler = (event, index) => {\n    setInputValue({\n      value: event.target.value,\n      index\n    });\n  };\n\n  const submitFormHandler = event => {\n    event.preventDefault();\n    console.log(countriesArray[inputValue.index]);\n    console.log(inputValue.value);\n    console.log(inputValue.index); // setInputValue({ value: null, index: null });\n  }; // Start Mapping and return the result below.\n\n\n  const foodItems = countriesArray.map((foodItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes[\"food-box\"],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes[\"food-info\"],\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: foodItem.foodName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: foodItem.foodType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: `$${foodItem.foodPrice}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitFormHandler,\n      className: classes[\"add-to-cart\"],\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: index,\n        type: \"number\",\n        min: \"1\",\n        max: \"20\",\n        step: \"1\",\n        defaultValue: \"1\",\n        onChange: event => changeInputHandler(event, index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !isTouched,\n        children: \"+ Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.products,\n    children: [foodItems.length <= 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes[\"no-items\"],\n      children: \"There are no items right now.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), foodItems.length > 0 && foodItems]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductFood, \"j9fRZy8R60pdYigmF8OFKmJtR2A=\");\n\n_c = ProductFood;\nexport default ProductFood;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductFood\");","map":{"version":3,"names":["useContext","useEffect","useState","classes","FoodContext","ProductFood","props","inputValue","setInputValue","foodCtx","fetchData","response","fetch","ok","Error","data","json","countries","error","console","log","countryFood","country","countriesArray","key","push","changeInputHandler","event","index","value","target","submitFormHandler","preventDefault","foodItems","map","foodItem","foodName","foodType","foodPrice","isTouched","products","length"],"sources":["D:/Front-End Web Development/Exercises/All/REACT/React-App-Food-Delivery/src/components/Products/ProductFood/ProductFood.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport classes from \"./ProductFood.module.scss\";\r\nimport FoodContext from \"../../../store/food-context\";\r\n\r\nconst ProductFood = (props) => {\r\n  const [inputValue, setInputValue] = useState({});\r\n  //  using Context to store our food-data,\r\n  //  so that we don't have to fetch it every re-rendered\r\n  const foodCtx = useContext(FoodContext);\r\n\r\n  // Here I used useEffect, because I will store the fetched data in Context,\r\n  // So I don't have to fetch the same data every re-evaluated.\r\n  useEffect(() => {\r\n    // Fetch food data from (Firebase)\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        `https://food-delivery-b0655-default-rtdb.firebaseio.com/food.json`\r\n      );\r\n\r\n      if (!response.ok) throw new Error(\"Fetch food failed!\");\r\n\r\n      const data = await response.json();\r\n\r\n      // Assign data to our context.\r\n      foodCtx.countries = data;\r\n    };\r\n\r\n    try {\r\n      fetchData();\r\n    } catch (error) {\r\n      console.log(error || \"Something went wrong!\");\r\n    }\r\n  }, [foodCtx]);\r\n\r\n  // Determine which country has been choosen.\r\n  const countryFood = foodCtx.countries[props.country];\r\n\r\n  // Convert the choosen country object to an array to map.\r\n  const countriesArray = [];\r\n  for (const key in countryFood) {\r\n    countriesArray.push(countryFood[key]);\r\n  }\r\n\r\n  const changeInputHandler = (event, index) => {\r\n    setInputValue({ value: event.target.value, index });\r\n  };\r\n\r\n  const submitFormHandler = (event) => {\r\n    event.preventDefault();\r\n    console.log(countriesArray[inputValue.index]);\r\n    console.log(inputValue.value);\r\n    console.log(inputValue.index);\r\n    // setInputValue({ value: null, index: null });\r\n  };\r\n\r\n  // Start Mapping and return the result below.\r\n  const foodItems = countriesArray.map((foodItem, index) => (\r\n    <div className={classes[\"food-box\"]}>\r\n      <div className={classes[\"food-info\"]}>\r\n        <h4>{foodItem.foodName}</h4>\r\n        <h6>{foodItem.foodType}</h6>\r\n        <span>{`$${foodItem.foodPrice}`}</span>\r\n      </div>\r\n\r\n      <form onSubmit={submitFormHandler} className={classes[\"add-to-cart\"]}>\r\n        <input\r\n          key={index}\r\n          id={index}\r\n          type=\"number\"\r\n          min=\"1\"\r\n          max=\"20\"\r\n          step=\"1\"\r\n          defaultValue=\"1\"\r\n          onChange={(event) => changeInputHandler(event, index)}\r\n        />\r\n        <button type=\"submit\" disabled={!isTouched}>\r\n          + Add\r\n        </button>\r\n      </form>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div className={classes.products}>\r\n      {foodItems.length <= 0 && (\r\n        <p className={classes[\"no-items\"]}>There are no items right now.</p>\r\n      )}\r\n      {foodItems.length > 0 && foodItems}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductFood;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}