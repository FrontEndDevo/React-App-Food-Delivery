{"ast":null,"code":"var _jsxFileName = \"D:\\\\Front-End Web Development\\\\Exercises\\\\All\\\\REACT\\\\React-App-Food-Delivery\\\\src\\\\components\\\\Checkout\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport classes from \"./Checkout.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialInputStates = {\n  name: \"\",\n  address: \"\",\n  number: 0,\n  isNameValid: false,\n  isAddressValid: false,\n  isNumberValid: false\n};\n\nconst inputReducersFn = (state, action) => {\n  switch (action.type) {\n    case \"NAME\":\n      return { ...state,\n        name: action.name,\n        isNameValid: action.isValueValid\n      };\n\n    case \"ADDRESS\":\n      return { ...state,\n        address: action.address,\n        isNameValid: action.isValueValid\n      };\n\n    case \"NUMBER\":\n      return { ...state,\n        number: action.number,\n        isNameValid: action.isValueValid\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nconst Checkout = props => {\n  _s();\n\n  const [inputs, dispatch] = useReducer(inputReducersFn, initialInputStates); // Disable paste in input fields.\n\n  const onCopyAndPasteDisableHandler = event => {\n    event.preventDefault();\n  }; // Store input values in our useReducer.\n\n\n  const onChangeNameHandler = event => {\n    // Check Validation: name is not empty\n    const value = event.target.value.trim();\n    const isValueValid = event.target.value.trim() !== \"\"; // Dispatch the action\n\n    dispatch({\n      type: \"NAME\",\n      name: value,\n      isNameValid: isValueValid\n    });\n  };\n\n  const onChangeAddressHandler = event => {\n    // Check Validation: Detailed address\n    const value = event.target.value.trim();\n    const isValueValid = event.target.value.trim().length >= 10; // Dispatch the action\n\n    dispatch({\n      type: \"ADDRESS\",\n      address: value,\n      isAddressValid: isValueValid\n    });\n  };\n\n  const onChangeNumberHandler = event => {\n    // Check Validation: value is a number & not empty\n    const value = event.target.value.trim();\n    const isValueValid = typeof event.target.value === \"number\" && event.target.value.trim().length !== 0; // Dispatch the action\n\n    dispatch({\n      type: \"NUMBER\",\n      number: value,\n      isNumberValid: isValueValid\n    });\n  }; // FORM SUBMMITION\n\n\n  const submitOrderHandler = event => {\n    event.preventDefault();\n    console.log(inputs);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes[\"form-checkout\"],\n    onSubmit: submitOrderHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes[\"input-boxes\"],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes[\"input-box\"],\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          id: \"name\",\n          onChange: onChangeNameHandler,\n          onPaste: onCopyAndPasteDisableHandler,\n          onCopy: onCopyAndPasteDisableHandler,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes[\"input-box\"],\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"useraddress\",\n          id: \"address\",\n          onChange: onChangeAddressHandler,\n          onPaste: onCopyAndPasteDisableHandler,\n          onCopy: onCopyAndPasteDisableHandler,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes[\"input-box\"],\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phone\",\n          children: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"usernumber\",\n          id: \"phone\",\n          onChange: onChangeNumberHandler,\n          onPaste: onCopyAndPasteDisableHandler,\n          onCopy: onCopyAndPasteDisableHandler,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.cancel,\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.confirm,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"jiWW7ntdV/o8sfgK+SAgqnBOdk8=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useReducer","classes","initialInputStates","name","address","number","isNameValid","isAddressValid","isNumberValid","inputReducersFn","state","action","type","isValueValid","Checkout","props","inputs","dispatch","onCopyAndPasteDisableHandler","event","preventDefault","onChangeNameHandler","value","target","trim","onChangeAddressHandler","length","onChangeNumberHandler","submitOrderHandler","console","log","actions","cancel","onCancel","confirm"],"sources":["D:/Front-End Web Development/Exercises/All/REACT/React-App-Food-Delivery/src/components/Checkout/Checkout.js"],"sourcesContent":["import { useReducer } from \"react\";\r\nimport classes from \"./Checkout.module.scss\";\r\n\r\nconst initialInputStates = {\r\n  name: \"\",\r\n  address: \"\",\r\n  number: 0,\r\n  isNameValid: false,\r\n  isAddressValid: false,\r\n  isNumberValid: false,\r\n};\r\n\r\nconst inputReducersFn = (state, action) => {\r\n  switch (action.type) {\r\n    case \"NAME\":\r\n      return { ...state, name: action.name, isNameValid:action.isValueValid };\r\n\r\n    case \"ADDRESS\":\r\n      return { ...state, address: action.address, isNameValid:action.isValueValid };\r\n\r\n    case \"NUMBER\":\r\n      return { ...state, number: action.number, isNameValid:action.isValueValid };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nconst Checkout = (props) => {\r\n  const [inputs, dispatch] = useReducer(inputReducersFn, initialInputStates);\r\n\r\n  // Disable paste in input fields.\r\n  const onCopyAndPasteDisableHandler = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  // Store input values in our useReducer.\r\n  const onChangeNameHandler = (event) => {\r\n    // Check Validation: name is not empty\r\n    const value = event.target.value.trim();\r\n    const isValueValid = event.target.value.trim() !== \"\";\r\n    // Dispatch the action\r\n    dispatch({ type: \"NAME\", name: value, isNameValid: isValueValid });\r\n  };\r\n\r\n  const onChangeAddressHandler = (event) => {\r\n    // Check Validation: Detailed address\r\n    const value = event.target.value.trim();\r\n    const isValueValid = event.target.value.trim().length >= 10;\r\n    // Dispatch the action\r\n    dispatch({ type: \"ADDRESS\", address: value, isAddressValid: isValueValid });\r\n  };\r\n\r\n  const onChangeNumberHandler = (event) => {\r\n    // Check Validation: value is a number & not empty\r\n    const value = event.target.value.trim();\r\n    const isValueValid =\r\n      typeof event.target.value === \"number\" &&\r\n      event.target.value.trim().length !== 0;\r\n    // Dispatch the action\r\n    dispatch({ type: \"NUMBER\", number: value, isNumberValid: isValueValid });\r\n  };\r\n\r\n  // FORM SUBMMITION\r\n  const submitOrderHandler = (event) => {\r\n    event.preventDefault();\r\n    console.log(inputs);\r\n  };\r\n\r\n  return (\r\n    <form className={classes[\"form-checkout\"]} onSubmit={submitOrderHandler}>\r\n      <div className={classes[\"input-boxes\"]}>\r\n        <div className={classes[\"input-box\"]}>\r\n          <label htmlFor=\"name\">Full Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            id=\"name\"\r\n            onChange={onChangeNameHandler}\r\n            onPaste={onCopyAndPasteDisableHandler}\r\n            onCopy={onCopyAndPasteDisableHandler}\r\n            autoComplete=\"off\"\r\n          />\r\n        </div>\r\n\r\n        <div className={classes[\"input-box\"]}>\r\n          <label htmlFor=\"address\">Address</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"useraddress\"\r\n            id=\"address\"\r\n            onChange={onChangeAddressHandler}\r\n            onPaste={onCopyAndPasteDisableHandler}\r\n            onCopy={onCopyAndPasteDisableHandler}\r\n            autoComplete=\"off\"\r\n          />\r\n        </div>\r\n\r\n        <div className={classes[\"input-box\"]}>\r\n          <label htmlFor=\"phone\">Phone Number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"usernumber\"\r\n            id=\"phone\"\r\n            onChange={onChangeNumberHandler}\r\n            onPaste={onCopyAndPasteDisableHandler}\r\n            onCopy={onCopyAndPasteDisableHandler}\r\n            autoComplete=\"off\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button className={classes.cancel} onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.confirm}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}