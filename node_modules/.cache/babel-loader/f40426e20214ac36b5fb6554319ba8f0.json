{"ast":null,"code":"var _jsxFileName = \"D:\\\\Front-End Web Development\\\\Exercises\\\\All\\\\REACT\\\\React-App-Food-Delivery\\\\src\\\\components\\\\Products\\\\ProductItem\\\\ProductItem.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport classes from \"./ProductItem.module.scss\";\nimport FoodContext from \"../../../store/food-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductItem = props => {\n  _s();\n\n  // States to mange data loading and errors\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const mainFoods = []; // Here I used useEffect, because I will store the fetched data in Context,\n  // So I don't have to fetch the same data every re-evaluated.\n\n  useEffect(() => {\n    // Fetch food data from (Firebase)\n    const fetchData = async () => {\n      setIsLoading(true);\n      const response = await fetch(`https://food-delivery-b0655-default-rtdb.firebaseio.com/food.json`);\n      if (!response.ok) throw new Error(\"Fetch food failed!\");\n      const data = await response.json(); // Assign data to our context.\n\n      for (const key in data) {}\n    };\n\n    try {\n      fetchData();\n      setIsLoading(false);\n    } catch (error) {\n      setError(error || \"Something went wrong!\");\n    }\n  }, []); //  using Context to store our food-data,\n  //  so that we don't have to fetch it every re-rendered\n\n  const foodCtx = useContext(FoodContext); // Determine the country.\n\n  const choosenCounrty = props.country; // Mapping on the choosen country object.\n\n  const countryFood = foodCtx.countries[choosenCounrty];\n  console.log(countryFood);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.products,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes[\"food-box\"],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes[\"food-info\"],\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"foodName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"foodType\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"$12.5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes[\"add-to-cart\"],\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"+ Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductItem, \"trARtdttUxy+bUgTNW9aSSB8Qqg=\");\n\n_c = ProductItem;\nexport default ProductItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductItem\");","map":{"version":3,"names":["useContext","useEffect","useState","classes","FoodContext","ProductItem","props","error","setError","isLoading","setIsLoading","mainFoods","fetchData","response","fetch","ok","Error","data","json","key","foodCtx","choosenCounrty","country","countryFood","countries","console","log","products"],"sources":["D:/Front-End Web Development/Exercises/All/REACT/React-App-Food-Delivery/src/components/Products/ProductItem/ProductItem.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport classes from \"./ProductItem.module.scss\";\r\nimport FoodContext from \"../../../store/food-context\";\r\n\r\nconst ProductItem = (props) => {\r\n  // States to mange data loading and errors\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const mainFoods = [];\r\n\r\n  // Here I used useEffect, because I will store the fetched data in Context,\r\n  // So I don't have to fetch the same data every re-evaluated.\r\n  useEffect(() => {\r\n    // Fetch food data from (Firebase)\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n\r\n      const response = await fetch(\r\n        `https://food-delivery-b0655-default-rtdb.firebaseio.com/food.json`\r\n      );\r\n\r\n      if (!response.ok) throw new Error(\"Fetch food failed!\");\r\n\r\n      const data = await response.json();\r\n\r\n      // Assign data to our context.\r\n      for (const key in data) {\r\n       \r\n      }\r\n    };\r\n\r\n    try {\r\n      fetchData();\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setError(error || \"Something went wrong!\");\r\n    }\r\n  }, []);\r\n\r\n  //  using Context to store our food-data,\r\n  //  so that we don't have to fetch it every re-rendered\r\n  const foodCtx = useContext(FoodContext);\r\n\r\n\r\n\r\n  // Determine the country.\r\n  const choosenCounrty = props.country;\r\n\r\n  // Mapping on the choosen country object.\r\n  const countryFood = foodCtx.countries[choosenCounrty];\r\n  console.log(countryFood);\r\n\r\n  return (\r\n    <div className={classes.products}>\r\n      <div className={classes[\"food-box\"]}>\r\n        <div className={classes[\"food-info\"]}>\r\n          <h4>foodName</h4>\r\n          <h6>foodType</h6>\r\n          <span>$12.5</span>\r\n        </div>\r\n\r\n        <div className={classes[\"add-to-cart\"]}>\r\n          <input type=\"number\" />\r\n          <button>+ Add</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductItem;\r\n"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;EAEA,MAAMS,SAAS,GAAG,EAAlB,CAL6B,CAO7B;EACA;;EACAV,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,SAAS,GAAG,YAAY;MAC5BF,YAAY,CAAC,IAAD,CAAZ;MAEA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CACzB,mEADyB,CAA5B;MAIA,IAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB,MAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;MAElB,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB,CAT4B,CAW5B;;MACA,KAAK,MAAMC,GAAX,IAAkBF,IAAlB,EAAwB,CAEvB;IACF,CAfD;;IAiBA,IAAI;MACFL,SAAS;MACTF,YAAY,CAAC,KAAD,CAAZ;IACD,CAHD,CAGE,OAAOH,KAAP,EAAc;MACdC,QAAQ,CAACD,KAAK,IAAI,uBAAV,CAAR;IACD;EACF,CAzBQ,EAyBN,EAzBM,CAAT,CAT6B,CAoC7B;EACA;;EACA,MAAMa,OAAO,GAAGpB,UAAU,CAACI,WAAD,CAA1B,CAtC6B,CA0C7B;;EACA,MAAMiB,cAAc,GAAGf,KAAK,CAACgB,OAA7B,CA3C6B,CA6C7B;;EACA,MAAMC,WAAW,GAAGH,OAAO,CAACI,SAAR,CAAkBH,cAAlB,CAApB;EACAI,OAAO,CAACC,GAAR,CAAYH,WAAZ;EAEA,oBACE;IAAK,SAAS,EAAEpB,OAAO,CAACwB,QAAxB;IAAA,uBACE;MAAK,SAAS,EAAExB,OAAO,CAAC,UAAD,CAAvB;MAAA,wBACE;QAAK,SAAS,EAAEA,OAAO,CAAC,WAAD,CAAvB;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAOE;QAAK,SAAS,EAAEA,OAAO,CAAC,aAAD,CAAvB;QAAA,wBACE;UAAO,IAAI,EAAC;QAAZ;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CAjED;;GAAME,W;;KAAAA,W;AAmEN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}