{"ast":null,"code":"var _jsxFileName = \"D:\\\\Front-End Web Development\\\\Exercises\\\\All\\\\REACT\\\\React-App-Food-Delivery\\\\src\\\\components\\\\Products\\\\ProductItem\\\\ProductItem.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport classes from \"./ProductItem.module.scss\";\nimport FoodContext from \"../../../store/food-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductItem = props => {\n  _s();\n\n  // States to mange data loading and errors\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false); //  using Context to store our food-data,\n  //  so that we don't have to fetch it every re-rendered\n\n  const foodCtx = useContext(FoodContext); // Here I used useEffect, because I will store the fetched data in Context,\n  // So I don't have to fetch the same data every re-evaluated.\n\n  useEffect(() => {\n    // Fetch food data from (Firebase)\n    const fetchData = async () => {\n      setIsLoading(true);\n      const response = await fetch(`https://food-delivery-b0655-default-rtdb.firebaseio.com/ffood.json`);\n      if (!response.ok) throw new Error(\"Fetch food failed!\");\n      const data = await response.json(); // Assign data to our context.\n\n      foodCtx.countries = data;\n    };\n\n    try {\n      fetchData();\n      setIsLoading(false);\n    } catch (error) {\n      setError(error || \"Something went wrong!\");\n    }\n  }, [foodCtx]); // Determine which country has been choosen.\n\n  const countryFood = foodCtx.countries[props.country]; // Convert the choosen country object to an array to map.\n\n  const countriesArray = [];\n\n  for (const key in countryFood) {\n    countriesArray.push(countryFood[key]);\n  } // Start Mapping and return the result below.\n\n\n  const foodItems = countriesArray.map(foodItem => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes[\"food-box\"],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes[\"food-info\"],\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: foodItem.foodName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: foodItem.foodType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: `$${foodItem.foodPrice}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes[\"add-to-cart\"],\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+ Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, foodItem.foodPrice, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this)); // Control which will be return below:\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    className: classes[\"no-items\"],\n    children: \"There are no items right now.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n\n  if (!error && isLoading) content = /*#__PURE__*/_jsxDEV(\"p\", {\n    className: classes[\"loading\"],\n    children: \"Loading items...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 15\n  }, this);\n  if (error && !isLoading) content = /*#__PURE__*/_jsxDEV(\"p\", {\n    className: classes[\"error\"],\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 15\n  }, this);\n  if (foodItems.length > 0 && !isLoading && !error) content = foodItems;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.products,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ProductItem, \"bcYEnwoE89RKjpoMf9wZReORZpw=\");\n\n_c = ProductItem;\nexport default ProductItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductItem\");","map":{"version":3,"names":["useContext","useEffect","useState","classes","FoodContext","ProductItem","props","error","setError","isLoading","setIsLoading","foodCtx","fetchData","response","fetch","ok","Error","data","json","countries","countryFood","country","countriesArray","key","push","foodItems","map","foodItem","foodName","foodType","foodPrice","content","length","products"],"sources":["D:/Front-End Web Development/Exercises/All/REACT/React-App-Food-Delivery/src/components/Products/ProductItem/ProductItem.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport classes from \"./ProductItem.module.scss\";\r\nimport FoodContext from \"../../../store/food-context\";\r\n\r\nconst ProductItem = (props) => {\r\n  // States to mange data loading and errors\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  //  using Context to store our food-data,\r\n  //  so that we don't have to fetch it every re-rendered\r\n  const foodCtx = useContext(FoodContext);\r\n\r\n  // Here I used useEffect, because I will store the fetched data in Context,\r\n  // So I don't have to fetch the same data every re-evaluated.\r\n  useEffect(() => {\r\n    // Fetch food data from (Firebase)\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n\r\n      const response = await fetch(\r\n        `https://food-delivery-b0655-default-rtdb.firebaseio.com/ffood.json`\r\n      );\r\n\r\n      if (!response.ok) throw new Error(\"Fetch food failed!\");\r\n\r\n      const data = await response.json();\r\n\r\n      // Assign data to our context.\r\n      foodCtx.countries = data;\r\n    };\r\n\r\n    try {\r\n      fetchData();\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setError(error || \"Something went wrong!\");\r\n    }\r\n  }, [foodCtx]);\r\n\r\n  // Determine which country has been choosen.\r\n  const countryFood = foodCtx.countries[props.country];\r\n\r\n  // Convert the choosen country object to an array to map.\r\n  const countriesArray = [];\r\n  for (const key in countryFood) {\r\n    countriesArray.push(countryFood[key]);\r\n  }\r\n\r\n  // Start Mapping and return the result below.\r\n  const foodItems = countriesArray.map((foodItem) => (\r\n    <div key={foodItem.foodPrice} className={classes[\"food-box\"]}>\r\n      <div className={classes[\"food-info\"]}>\r\n        <h4>{foodItem.foodName}</h4>\r\n        <h6>{foodItem.foodType}</h6>\r\n        <span>{`$${foodItem.foodPrice}`}</span>\r\n      </div>\r\n\r\n      <div className={classes[\"add-to-cart\"]}>\r\n        <input type=\"number\" />\r\n        <button>+ Add</button>\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  // Control which will be return below:\r\n  let content = (\r\n    <p className={classes[\"no-items\"]}>There are no items right now.</p>\r\n  );\r\n\r\n  if (!error && isLoading)\r\n    content = <p className={classes[\"loading\"]}>Loading items...</p>;\r\n\r\n  if (error && !isLoading)\r\n    content = <p className={classes[\"error\"]}>{error}</p>;\r\n\r\n  if (foodItems.length > 0 && !isLoading && !error) content = foodItems;\r\n\r\n  return <div className={classes.products}>{content}</div>;\r\n};\r\n\r\nexport default ProductItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}